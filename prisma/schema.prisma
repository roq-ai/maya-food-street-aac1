generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model business {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?       @db.VarChar(255)
  address        String?       @db.VarChar(255)
  contact_number String?       @db.VarChar(255)
  opening_hours  String?       @db.VarChar(255)
  name           String        @db.VarChar(255)
  created_at     DateTime      @default(now()) @db.Timestamp(6)
  updated_at     DateTime      @default(now()) @db.Timestamp(6)
  user_id        String        @db.Uuid
  tenant_id      String        @db.VarChar(255)
  user           user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  feedback       feedback[]
  food_item      food_item[]
  order          order[]
  reservation    reservation[]
}

model feedback {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_name String   @db.VarChar(255)
  rating        Int
  comments      String   @db.VarChar(255)
  business_id   String   @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  business      business @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model food_item {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  price       Int
  status      String   @db.VarChar(255)
  business_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  business    business @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model order {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_name String   @db.VarChar(255)
  order_status  String   @db.VarChar(255)
  total_price   Int
  business_id   String   @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  business      business @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model reservation {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_name    String   @db.VarChar(255)
  reservation_date DateTime @db.Date
  reservation_time DateTime @db.Time(6)
  number_of_people Int
  business_id      String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  business         business @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  business    business[]
}
